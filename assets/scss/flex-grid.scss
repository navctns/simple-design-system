.row{
    display: flex;
    width: 100%;
    .col{
        &-3{
            flex-basis: 25%;
        }
    }
}

.flex-grid{
    display: flex;
    flex-wrap: wrap;
    margin: calc(var(--grid-gap) * -1) 0 0 calc(var(--grid-gap) * -1);
  }
  
  .col{
    padding:calc(var(--grid-gap)) 0 0 calc(var(--grid-gap));
    background-clip: content-box;
    flex-basis: 100%;
  }

  
  @function round-width ($i) {
    // $width : floor(100 * $i * 100/ $grid-columns) / 100;
    // @return $width#{"%"};
    $width : percentage(floor($i * 100/ $grid-columns) / 100);
    @return $width;
  }
  
  $grid-columns: 12;
  
  @for $i from 1 through $grid-columns {
    .col--#{$i} {
      flex-basis: round-width($i);
      max-width: round-width($i); 
    }
  }


  // Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}